{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.11-bullseye",
	"features": {
		"ghcr.io/devcontainers-contrib/features/pipx-package:1": {},
		"ghcr.io/devcontainers-contrib/features/poetry:2": {},
		"ghcr.io/devcontainers-contrib/features/black:2": {},
		"ghcr.io/devcontainers-contrib/features/flake8:2": {},
		"ghcr.io/devcontainers-contrib/features/pylint:2": {}
	},

<<<<<<< HEAD
	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"python.defaultInterpreterPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.formatting.provider": "black",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		// don't set path explicitly but rely on `python -m pylint` working so that
		// it finds pylint in currently active virtualenv
		// https://stackoverflow.com/questions/60030017/vscode-path-to-the-pylint-linter-is-invalid
		// "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
		"editor.bracketPairColorization.enabled": true,
		"editor.guides.bracketPairs":"active",
	},
=======
    "customizations": {
        "vscode": {
            "extensions": [
                "eamodio.gitlens",
				"tamasfe.even-better-toml",
				"davidanson.vscode-markdownlint",
				"redhat.vscode-yaml",
				"bierner.markdown-mermaid"				
            ]
        }
    },
>>>>>>> fabffb9 (updated vscode config)

	"forwardPorts": [8000],
<<<<<<< HEAD

	// Use 'postCreateCommand' to run commands after the container is created.
	//"postCreateCommand": "poetry config virtualenvs.create true && poetry config virtualenvs.in-project true",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
=======
	"postStartCommand": [ 
		"poetry config virtualenvs.in-project true"
	],
	"runArgs": ["--userns=keep-id:uid=1000,gid=1000"],
    "containerUser": "vscode",
    "containerEnv": {
        "HOME": "/home/vscode"
    }
>>>>>>> fabffb9 (updated vscode config)
}
